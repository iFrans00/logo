import{O as v,l as i,A as C,a7 as c,k as b,v as o,n as f,a8 as u,C as d,$ as l,S as m,a9 as S,V as x}from"./index.004e47e7.js";function y(e){const s=v("useRender");s.render=e}const z=["x-small","small","default","large","x-large"],h=i({size:{type:[String,Number],default:"default"}},"size");function I(e){let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:C();return c(()=>{let t,n;return b(z,e.size)?t=`${s}--size-${e.size}`:e.size&&(n={width:o(e.size),height:o(e.size)}),{sizeClasses:t,sizeStyles:n}})}const R=i({tag:{type:String,default:"div"}},"tag");function g(e){return c(()=>{const s=[],t={};return e.value.background&&(u(e.value.background)?t.backgroundColor=e.value.background:s.push(`bg-${e.value.background}`)),e.value.text&&(u(e.value.text)?(t.color=e.value.text,t.caretColor=e.value.text):s.push(`text-${e.value.text}`)),{colorClasses:s,colorStyles:t}})}function T(e,s){const t=f(()=>({text:d(e)?e.value:s?e[s]:null})),{colorClasses:n,colorStyles:a}=g(t);return{textColorClasses:n,textColorStyles:a}}function O(e,s){const t=f(()=>({background:d(e)?e.value:s?e[s]:null})),{colorClasses:n,colorStyles:a}=g(t);return{backgroundColorClasses:n,backgroundColorStyles:a}}function $(e){const s=l(),t=l(!1);if(m){const n=new IntersectionObserver(a=>{e==null||e(a,n),t.value=!!a.find(r=>r.isIntersecting)});S(()=>{n.disconnect()}),x(s,(a,r)=>{r&&(n.unobserve(r),t.value=!1),a&&n.observe(a)},{flush:"post"})}return{intersectionRef:s,isIntersecting:t}}export{h as a,I as b,T as c,g as d,O as e,$ as f,R as m,y as u};
